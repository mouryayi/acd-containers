{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/installing/air-gap-installation.md"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-installing-air-gap-installation-md-bdfc0399da2056f1503e.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/acd-containers/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Since air gap environments do not have access to the public internet, and therefore no access to DockerHub, the following preparation steps are necessary to make the required images accessible to the Red Hat OpenShift Container Platform cluster.`}</p>\n    <p>{`If the Red Hat OpenShift Container Platform cluster has a Bastion host, ensure that the Bastion host can access:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The public internet to download the CASE and images.`}</li>\n      <li parentName=\"ul\">{`The target (air gap) image registry where all the images will be mirrored to.`}</li>\n      <li parentName=\"ul\">{`The Red Hat OpenShift Container Platform cluster to install the ACD operator on.`}</li>\n    </ul>\n    <p>{`In the absence of a Bastion host, a portable host with access to the public internet may used. By downloading the CASE and images onto the portable host, and then transporting the portable host into the air gap environment, the images can then be mirrored to the target (air gap) image registry.`}</p>\n    <p>{`If using a Bastion host, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"#using-a-bastion-host\"\n      }}>{`Using a Bastion host`}</a>{`.\nIf using a portable host, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"#using-a-portable-host\"\n      }}>{`Using a portable host`}</a>{`.`}</p>\n    <h3>{`Using a Bastion host`}</h3>\n    <h4>{`1. Prepare the Bastion host`}</h4>\n    <p>{`Ensure you have the following installed on the Bastion host:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docker.com\"\n        }}>{`Docker CLI (docker)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/cloud-pak-cli\"\n        }}>{`IBM Cloud Pak CLI (cloudctl)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html\"\n        }}>{`Red Hat OpenShift Container Platform CLI (oc)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/containers/skopeo\"\n        }}>{`Skopeo (skopeo)`}</a></li>\n    </ul>\n    <h4>{`2. Download the CASE`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a local directory in which to save the CASE.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`mkdir -p $HOME/offline\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the CASE from `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM/cloud-pak/tree/master/repo/case/ibm-wh-acd\"\n          }}>{`https://github.com/IBM/cloud-pak/tree/master/repo/case/ibm-wh-acd`}</a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Save the CASE.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case save \\\\\n    --case <case-path> \\\\\n    --outputdir $HOME/offline\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-path>`}</inlineCode>{` is the path or URL to the CASE to save.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify the CASE (.tgz) file and images (.csv) file have been downloaded.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`ls $HOME/offline\n\ncharts\nibm-wh-acd\nibm-wh-acd-2.0.0-charts.csv\nibm-wh-acd-2.0.0-images.csv\nibm-wh-acd-2.0.0.tgz\n`}</code></pre>\n      </li>\n    </ol>\n    <h4>{`3. Log into cluster`}</h4>\n    <p>{`Log into the Red Hat OpenShift Container Platform cluster as a cluster administrator using the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command.`}</p>\n    <h4>{`4. Configure Bastion host’s registry authentication secret`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the authentication secret for the IBM Entitled Registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-creds-airgap \\\\\n    --args \"--registry cp.icr.io --user <registry-user> --pass <registry-password>\" \\\\\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the entitled registry. This should be either `}<inlineCode parentName=\"li\">{`cp`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`iamapikey`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the entitled registry.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the authentication secret for the Bastion host’s registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-creds-airgap \\\\\n    --args \"--registry <bastion-registry> --user <registry-user> --pass <registry-password>\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<bastion-registry>`}</inlineCode>{` is the Bastion host’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the Bastion host’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the Bastion host’s registry.`}</li>\n        </ul>\n        <p parentName=\"li\">{`The credentials are saved to `}<inlineCode parentName=\"p\">{`$HOME/.airgap/secrets/<target-registry>.json`}</inlineCode></p>\n      </li>\n    </ol>\n    <h4>{`5. Mirror images to Bastion host’s registry`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the images in the CASE from the source (public) registry to the Bastion host’s (air gap) registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action mirror-images \\\\\n    --args \"--registry <bastion-registry> --inputDir $HOME/offline\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<bastion-registry>`}</inlineCode>{` is the Bastion host’s registry.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`6. Configure cluster to access Bastion host’s registry`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure a global image pull secret and ImageContentSourcePolicy resource.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-cluster-airgap \\\\\n    --args \"--registry <bastion-registry> --inputDir $HOME/offline\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<bastion-registry>`}</inlineCode>{` is the Bastion host’s registry.`}</li>\n        </ul>\n        <p parentName=\"li\"><em parentName=\"p\">{`WARNING:`}</em>{` This step may restart all cluster nodes. The cluster resources might be unavailable until the time the new pull secret is applied.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Optional: If you are using an insecure Bastion host’s registry, you must add the Bastion host’s registry to the cluster insecureRegistries list.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc patch image.config.openshift.io/cluster --type=merge \\\\\n    -p '{\"spec\":{\"registrySources\":{\"insecureRegistries\":[\"'<bastion-registry>'\"]}}}'\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<bastion-registry>`}</inlineCode>{` is the Bastion host’s registry.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`7. Proceed with installation`}</h4>\n    <p>{`Now that the air gap installation preparation steps are complete, you may continue with the installation. Proceed to `}<a parentName=\"p\" {...{\n        \"href\": \"../installing/#installing-the-ibm-operator-catalog\"\n      }}>{`Installing IBM Operator Catalog`}</a>{`.`}</p>\n    <h3>{`Using a portable host`}</h3>\n    <h4>{`1. Prepare the portable host`}</h4>\n    <p>{`Ensure you have the following installed on the portable host:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docker.com\"\n        }}>{`Docker CLI (docker)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/cloud-pak-cli\"\n        }}>{`IBM Cloud Pak CLI (cloudctl)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html\"\n        }}>{`Red Hat OpenShift Container Platform CLI (oc)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/containers/skopeo\"\n        }}>{`Skopeo (skopeo)`}</a></li>\n    </ul>\n    <h4>{`2. Download the CASE`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a local directory in which to save the CASE.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`mkdir -p $HOME/offline\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the CASE from `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM/cloud-pak/tree/master/repo/case/ibm-wh-acd\"\n          }}>{`https://github.com/IBM/cloud-pak/tree/master/repo/case/ibm-wh-acd`}</a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Save the CASE.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case save \\\\\n    --case <case-path> \\\\\n    --outputdir $HOME/offline\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-path>`}</inlineCode>{` is the path or URL to the CASE to save.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`3. Configure portable registry and authentication secret`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Initialize the portable registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action init-registry \\\\\n    --args \"--registry localhost --user <registry-user> --pass <registry-password> --dir $HOME/offline/imageregistry\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the registry, which is initialized to this value.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the registry, which is initialized to this value.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Start the portable registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action start-registry \\\\\n    --args \"--registry localhost --port 443 --user <registry-user> --pass <registry-password> --dir $HOME/offline/imageregistry\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the portable device’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the portable device’s registry.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the authentication secret for the IBM Entitled Registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-creds-airgap \\\\\n    --args \"--registry cp.icr.io --user <registry-user> --pass <registry-password>\" \\\\\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the entitled registry. This should be either `}<inlineCode parentName=\"li\">{`cp`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`iamapikey`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the entitled registry.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the authentication secret for the portable registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-creds-airgap \\\\\n    --args \"--registry localhost:443 --user <registry-user> --pass <registry-password>\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the portable device’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the portable device’s registry.`}</li>\n        </ul>\n        <p parentName=\"li\">{`The credentials are saved to `}<inlineCode parentName=\"p\">{`$HOME/.airgap/secrets/localhost:443.json`}</inlineCode></p>\n      </li>\n    </ol>\n    <h4>{`4. Mirror images to portable registry`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The following step copies the images in the CASE from the source (public) registry to the portable registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action mirror-images \\\\\n    --args \"--registry localhost:443 --inputDir $HOME/offline\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`5. Transport portable device`}</h4>\n    <p>{`Now that the images are in the portable registry, transport the portable host into the air gap environment.`}</p>\n    <h4>{`6. Log into the cluster`}</h4>\n    <p>{`Log into the Red Hat OpenShift Container Platform cluster as a cluster administrator using the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command.`}</p>\n    <h4>{`7. Configure portable device’s registry authentication secret`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the authentication secret for the portable device’s registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-creds-airgap \\\\\n    --args \"--registry <portable-registry> --user <registry-user> --pass <registry-password>\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<portable-registry>`}</inlineCode>{` is the portable device’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-user>`}</inlineCode>{` is the username for the portable device’s registry.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<registry-password>`}</inlineCode>{` is the password for the portable device’s registry.`}</li>\n        </ul>\n        <p parentName=\"li\">{`The credentials are saved to `}<inlineCode parentName=\"p\">{`$HOME/.airgap/secrets/$TARGET_REGISTRY.json`}</inlineCode></p>\n      </li>\n    </ol>\n    <h4>{`8. Mirror images to portable device’s registry`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The following step copies the images in the CASE from the portable registry to the portable device’s registry.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action mirror-images \\\\\n    --args \"--fromRegistry localhost:443 --registry <portable-registry> --inputDir $HOME/offline\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<portable-registry>`}</inlineCode>{` is the portable device’s registry.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`9. Configure cluster to access portable device’s registry`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure a global image pull secret and ImageContentSourcePolicy resource.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case $HOME/offline/<case-file> \\\\\n    --namespace openshift-marketplace \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action configure-cluster-airgap \\\\\n    --args \"--registry <portable-registry> --inputDir $HOME/offline\"\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<case-file>`}</inlineCode>{` is the CASE file.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<portable-registry>`}</inlineCode>{` is the portable device’s registry.`}</li>\n        </ul>\n        <p parentName=\"li\"><em parentName=\"p\">{`WARNING:`}</em>{` This step may restart all cluster nodes. The cluster resources might be unavailable until the time the new pull secret is applied.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Optional: If you are using an insecure portable device’s registry, you must add the portable device’s registry to the cluster insecureRegistries list.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc patch image.config.openshift.io/cluster --type=merge \\\\\n    -p '{\"spec\":{\"registrySources\":{\"insecureRegistries\":[\"'<portable-registry>'\"]}}}'\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<portable-registry>`}</inlineCode>{` is the portable device’s registry.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h4>{`10. Proceed with installation`}</h4>\n    <p>{`Now that the air gap installation preparation steps are complete, you may continue with the installation. Proceed to `}<a parentName=\"p\" {...{\n        \"href\": \"../installing/#installing-the-ibm-operator-catalog\"\n      }}>{`Installing IBM Operator Catalog`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}