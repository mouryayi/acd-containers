{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/clouddocs/customizing.md"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-clouddocs-customizing-md-a7e1f7c8ec8f238c4a2b.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/acd-containers/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {\n      /* ---\n      copyright:\n       years: 2011, 2019\n      lastupdated: \"2019-04-12\"\n      keywords: annotator clinical data, clinical data, annotation\n      subcollection: wh-acd\n      --- */\n    }\n    {\n      /* # Customizing */\n    }\n    <p>{`The Annotator for Clinical Data Configuration Editor supports extensive customization of the annotators as well as the ability to preview the customizations and export them in the form of a cartridge (zip file) that can be deployed directly to the service via the `}<inlineCode parentName=\"p\">{`/cartridges`}</inlineCode>{` APIs.`}</p>\n    <p>{`The configuration editor facilitates the following customizations:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Customization`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Dictionaries`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A set of terms describing a unique concept that is matched against the provided text to be analyzed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Derived Concepts`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rules for deriving concepts when one or more other concepts or tokens appears in the surrounding context.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filters`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Conditional rules for omitting undesired annotations from the service response.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clinical Attributes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Configurable annotations built upon one or more other annotations. Optionally, semantically linked values in the surrounding context can be captured and associated with the attribute.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Derived Clincal Attributes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Conditional logic and expressions for deriving new attributes based on values associated with other attributes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute Qualifiers`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Configurations for detecting qualifying terms in the immediate context of an attribute and capturing the qualifiers as a field within the output attribute annotation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Ontological Relations`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Ontology configurations for extracting ontological relations between concepts cooccurring within the same sentence.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CPT Code Mapping`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Mapping configurations for outputting CPT codes from the concept and procedure annotators.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`Table 1. Customizations facilitated by the configuaration editor`}</inlineCode></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/account/reg/us-en/signup?formid=MAIL-watsonhealthna\"\n      }}>{`Contact your IBM representative`}</a>{` to learn more about leveraging the configuration editor to customize the behavior of the service.`}</p>\n    <h2>{`Cartridge Deployment`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The consumer uses the IBM Clinical Data Annotator Configuration Editor to create a new cartridge (or modify an existing one) and customizes the contents (artifacts) of the cartridge to their domain. After that, the consumer will `}<strong parentName=\"p\">{`Export`}</strong>{` the cartridge in order to save a snapshot of the cartridge.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The consumer deploys the cartridge snapshot (a zip file) to  IBM Clinical Data Annotator using `}<em parentName=\"p\">{`POST /v1/cartridges`}</em>{` API. A successful request for creating a cartridge will return with HTTP `}<q>{`202 ACCEPTED`}</q>{` response code and will include the path to the resource, e.g., /v1/cartridges/cartridge`}<em parentName=\"p\">{`id in the response body and the response header. The resource path can be used in _GET /v1/cartridges/cartridgeId`}</em>{` API to obtain the overall deployment status. In the following curl example, the consumer’s cartridge file is `}<inlineCode parentName=\"p\">{`/path/to/name_of_cartridge_file.zip`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Curl\"\n      }}>{`\n curl -X POST --header \"Authorization: Bearer xxxxxxxxxxxxxxx\" \\\\\n  --header \"Accept:application/json\" \\\\\n --header \"Content-Type:application/octet-stream\" \\\\\n --data-binary @/path/to/name_of_cartridge_file.zip \\\\\n \"<route_host>/v1/cartridges?version=2019-09-01\"\n\n`}</code></pre>\n    <p>{`Use the `}<em parentName=\"p\">{`POST /v1/cartridges`}</em>{` operation for the initial deployment of a cartridge version and `}<em parentName=\"p\">{`PUT /v1/cartridges`}</em>{` to redploy cartridge updates. Different pusblished versions of a cartridge (e.g. cartridge_v1.0, cartridge_v2.0) will need to be initially deployed via the POST operation and subsequently redeployed via the PUT operation.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`The consumer redeploys a previously deployed cartridge version using the `}<em parentName=\"li\">{`PUT /v1/cartridges`}</em>{` API. The cartridges id is extracted directly from the cartridge zip file. A successful request for updating the cartridge (re)deployment will result in a HTTP `}<q>{`202 ACCEPTED`}</q>{` response code and will include the path to the resource, e.g., -v1-cartridges-cartridge_id in the response body and the response header.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Curl\"\n      }}>{`\n curl -X PUT --header \"Authorization: Bearer xxxxxxxxxxxxxxx\" \\\\\n --header \"Accept:application/json\" \\\\\n --header \"Content-Type:application/octet-stream\" \\\\\n --data-binary @/path/to/name_of_cartridge_file.zip \\\\\n \"<route_host>/v1/cartridges?version=2019-09-01\"\n\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`The consumer retrieves a list of deployed cartridges for a given tenant using the `}<em parentName=\"li\">{`GET /v1/cartridges`}</em>{` API. An empty list is returned if no cartridges have been deployed.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Curl\"\n      }}>{`\n curl -X GET --header \"Authorization: Bearer xxxxxxxxxxxxxxx\" \\\\\n --header \"Accept:application/json\" \\\\\n \"<route_host>/v1/cartridges?version=2019-09-01\"\n\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`The consumer can view the status of a specific cartridge deployment by invoking the `}<em parentName=\"li\">{`GET /v1/cartridges/{id}`}</em>{` API with the cartridge ID supplied as a path parameter. If the supplied ID does not exists, then a HTTP  `}<q>{` 404 Not Found `}</q>{` response code is returned. The following curl command returns the deployment status of the `}<q>{`cartridge_id`}</q>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Curl\"\n      }}>{`\n curl -X GET --header \"Authorization: Bearer xxxxxxxxxxxxxxx\" \\\\\n --header \"Accept:application/json\" \\\\\n \"<route_host>/v1/cartridges/cartridge_id?version=2019-09-01\"\n\n`}</code></pre>\n    <p>{`The `}<em parentName=\"p\">{`/v1/cartridges`}</em>{` API is the recommended way for a cartridge deployment and is compatible with the legacy `}<em parentName=\"p\">{`/v1/deploy`}</em>{` API. In many situations, the consumer has already deployed a cartridge using the `}<em parentName=\"p\">{`/v1/deploy`}</em>{` API and the consumer can immediately update the same cartridge using the above POST and PUT operations on the `}<em parentName=\"p\">{`/v1/cartridges`}</em>{` API to initially create and to subsequently update the cartridge deployment.\nA typical `}<em parentName=\"p\">{`POST /v1/cartridges`}</em>{` operation creates and initializes a deployment for cartridge that has never been deployed to the system. For cartridges that have been previously deployed with the `}<em parentName=\"p\">{`/v1/deploy`}</em>{` API, the `}<em parentName=\"p\">{`POST /v1/cartridges`}</em>{` API will create, initialize, and update an existing cartridge deployment. Subsequent redeployments of a cartridge must use the `}<em parentName=\"p\">{`PUT /v1/cartridges`}</em>{` API.`}</p>\n    <h2>{`Legacy Cartridge Deployment`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`The consumer uses the IBM Clinical Data Annotator Configuration Editor to create a new cartridge (or modify an existing one) and customizes the contents (artifacts) of the cartridge to their domain. After that, the consumer will `}<strong parentName=\"li\">{`Export`}</strong>{` the cartridge in order to save a snapshot of the cartridge.`}</li>\n      <li parentName=\"ol\">{`The consumer deploys the cartridge snapshot (a zip file) to  IBM Clinical Data Annotator using `}<em parentName=\"li\">{`POST /v1/deploy`}</em>{` API. In the following curl example, the consumer’s cartridge file is `}<inlineCode parentName=\"li\">{`./my_cartridges/name_of_cartridge_file.zip`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`update=false`}</inlineCode>{` means do not update the resource if it already exists. Specifying the `}<strong parentName=\"li\">{`update=true`}</strong>{` parameter on the deploy API to update an existing cartridge.`}</li>\n    </ol>\n    <p>{`A successful cartridge deploy will result in `}<q>{`201 Created`}</q>{` if it is a new resource, or `}<q>{`200 OK`}</q>{` if `}<inlineCode parentName=\"p\">{`update=true`}</inlineCode>{` was specified and the existing resource was updated.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Curl\"\n      }}>{`curl -X POST --header \"Authorization: Bearer xxxxxxxxxxxxxxx\" \\\\\n--header “Content-Type: application/octet-stream” \\\\\n--header \"Accept: application/json\" \\\\\n--data-binary @./my_cartridges/name_of_cartridge_file.zip \\\\\n\"<route_host>/v1/deploy?update=false&version=2018-01-17\"\n`}</code></pre>\n    <p>{`Some large cartridge deployments can exceed the request timeout thresholds defined in the DataPower gateways (usually after 2 mins). In that event, you may receive the following error response. See `}<a parentName=\"p\" {...{\n        \"href\": \"/acd-containers/clouddocs/customizing/\"\n      }}>{`Cartridge Deployment Timeout`}</a>{` for additional considerations during the deployment of large cartridges.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}