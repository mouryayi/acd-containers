{"componentChunkName":"component---src-pages-management-configuring-md","path":"/management/configuring/","result":{"pageContext":{"frontmatter":{"title":"Configuration","excerpt":"Configure your ACD installation.","categories":"management","slug":"configuring","toc":true},"relativePagePath":"/management/configuring.md","titleType":"page","MdxNode":{"id":"42564883-cc41-55bb-a396-0ca5eae4708f","children":[],"parent":"1c3faf32-0cf6-51f2-82fb-a5ab5e470520","internal":{"content":"---\ntitle: \"Configuration\"\nexcerpt: \"Configure your ACD installation.\"\ncategories: management\nslug: configuring\ntoc: true\n---\n\nThe following tables lists the configurable parameters available for ACD.\n\nIf using the web console, parameters are found under the ![YAML view](../../images/configuration_yaml.png) or a subset are found under the ![Form view](../../images/configuration_form.png).\n\nIf using the CLI, these are configurable via the CSV.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `license.accept` | License Accept | `false` |\n| `replicas` | ACD replicas | `3`    |\n| `annotators.advancedCareInsights.enabled` | Advanced care insights annotator enabled | `true` |\n| `annotators.attributeDetection.enabled` | Attribute detection annotator enabled | `true` |\n| `annotators.conceptDetection.enabled` | Concept detection annotator enabled | `true` |\n| `annotators.conceptDisambiguation.enabled` | Concept disambiguation annotator enabled | `true` |\n| `annotators.conceptValueDetection.enabled` | Concept value detection annotator enabled | `true` |\n| `annotators.hypotheticalDetection.enabled` | Hypothetical detection annotator enabled | `true` |\n| `annotators.modelBroker.enabled` | Model broker annotator enabled | `true` |\n| `annotators.negationDetection.enabled` | Negation detection annotator enabled | `true` |\n| `annotators.ontology.enabled` | Ontology annotator enabled | `true` |\n| `annotators.spellChecker.enabled` | Spell checker annotator enabled | `true` |\n| `configurationStorage.backend` | Configuration storage backend (`file` or `cos`) | `file` |\n| `configurationStorage.file.persistent` | File based configuration storage persistence enabled | `true` |\n| `resources.limits.cpu` | Limit the number of virtual cores allocated to the ACD service | \"\" |\n| `networkPolicy.enabled` | Enable network isolation between pods within and outside of the namespace that ACD is installed into.  Only the top-level ACD service is exposed through port 9443 | true |\n| `networkPolicy.ingress.fromSelectors` | Further restrict ingress access to ACD on port 9443 from other pods or namespaces using fromSelectors and labels.  Requires networkPolicy to be enabled. | |\n\nThese additional configurable parameters may be provided when file based storage (`file`) is used and `configurationStorage.file.persistent` is `true`.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `configurationStorage.file.volume.existingClaimName` | Use an existing persistent volume claim |  |\n| `configurationStorage.file.volume.size` | Persistent volume size, e.g. 10Gi |  |\n| `configurationStorage.file.volume.supplementalGroup` | Group ID for writeable access to file storage if other than root (0) |  |\n<!---\n | `configurationStorage.file.volume.storageClassName` | Use an existing persistent volume of this class type |  |\n| `configurationStorage.file.volume.useDynamicProvisioning` | Use a dynamically provisioned volume | `false` | \n--->\n\nThese additional configurable parameters must be provided when IBM Cloud Object Store (`COS`) is used for  `configurationStorage.backend`.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `configurationStorage.s3.bucket` | IBM Cloud Object bucket (Required) |  |\n| `configurationStorage.s3.endpointUrl` | IBM Cloud Object endpoint (Required) |  |\n| `configurationStorage.s3.location` | IBM Cloud Object region (Required) |  |\n","type":"Mdx","contentDigest":"7e398996798750490320ba2c22cb8f0d","owner":"gatsby-plugin-mdx","counter":215},"frontmatter":{"title":"Configuration","excerpt":"Configure your ACD installation.","categories":"management","slug":"configuring","toc":true},"excerpt":"Configure your ACD installation.","exports":{},"rawBody":"---\ntitle: \"Configuration\"\nexcerpt: \"Configure your ACD installation.\"\ncategories: management\nslug: configuring\ntoc: true\n---\n\nThe following tables lists the configurable parameters available for ACD.\n\nIf using the web console, parameters are found under the ![YAML view](../../images/configuration_yaml.png) or a subset are found under the ![Form view](../../images/configuration_form.png).\n\nIf using the CLI, these are configurable via the CSV.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `license.accept` | License Accept | `false` |\n| `replicas` | ACD replicas | `3`    |\n| `annotators.advancedCareInsights.enabled` | Advanced care insights annotator enabled | `true` |\n| `annotators.attributeDetection.enabled` | Attribute detection annotator enabled | `true` |\n| `annotators.conceptDetection.enabled` | Concept detection annotator enabled | `true` |\n| `annotators.conceptDisambiguation.enabled` | Concept disambiguation annotator enabled | `true` |\n| `annotators.conceptValueDetection.enabled` | Concept value detection annotator enabled | `true` |\n| `annotators.hypotheticalDetection.enabled` | Hypothetical detection annotator enabled | `true` |\n| `annotators.modelBroker.enabled` | Model broker annotator enabled | `true` |\n| `annotators.negationDetection.enabled` | Negation detection annotator enabled | `true` |\n| `annotators.ontology.enabled` | Ontology annotator enabled | `true` |\n| `annotators.spellChecker.enabled` | Spell checker annotator enabled | `true` |\n| `configurationStorage.backend` | Configuration storage backend (`file` or `cos`) | `file` |\n| `configurationStorage.file.persistent` | File based configuration storage persistence enabled | `true` |\n| `resources.limits.cpu` | Limit the number of virtual cores allocated to the ACD service | \"\" |\n| `networkPolicy.enabled` | Enable network isolation between pods within and outside of the namespace that ACD is installed into.  Only the top-level ACD service is exposed through port 9443 | true |\n| `networkPolicy.ingress.fromSelectors` | Further restrict ingress access to ACD on port 9443 from other pods or namespaces using fromSelectors and labels.  Requires networkPolicy to be enabled. | |\n\nThese additional configurable parameters may be provided when file based storage (`file`) is used and `configurationStorage.file.persistent` is `true`.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `configurationStorage.file.volume.existingClaimName` | Use an existing persistent volume claim |  |\n| `configurationStorage.file.volume.size` | Persistent volume size, e.g. 10Gi |  |\n| `configurationStorage.file.volume.supplementalGroup` | Group ID for writeable access to file storage if other than root (0) |  |\n<!---\n | `configurationStorage.file.volume.storageClassName` | Use an existing persistent volume of this class type |  |\n| `configurationStorage.file.volume.useDynamicProvisioning` | Use a dynamically provisioned volume | `false` | \n--->\n\nThese additional configurable parameters must be provided when IBM Cloud Object Store (`COS`) is used for  `configurationStorage.backend`.\n\n| Parameter | Description | Default |\n| -         | -           | -       |\n| `configurationStorage.s3.bucket` | IBM Cloud Object bucket (Required) |  |\n| `configurationStorage.s3.endpointUrl` | IBM Cloud Object endpoint (Required) |  |\n| `configurationStorage.s3.location` | IBM Cloud Object region (Required) |  |\n","fileAbsolutePath":"/home/travis/build/IBM/acd-containers/src/pages/management/configuring.md"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}