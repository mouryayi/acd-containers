{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/clouddocs/filtering.md"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-clouddocs-filtering-md-47b90422a9d4613391ce.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/acd-containers/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {\n      /* ---\n      copyright:\n       years: 2011, 2019\n      lastupdated: \"2019-10-17\"\n      keywords: annotator clinical data, clinical data, annotation\n      subcollection: wh-acd\n      ---\n      # Filtering */\n    }\n    <p>{`Filters can be applied in one of two ways, either immediately after an annotator in the flow or at the very end of all flows. Conditions may exist that require annotation filtering before the next annotator runs in the flow. In this case you would define your filter with the specific annotator within the flow element. However, if you do not have unique conditions or you do not know which annotator to add a filter definition in the flow, you can just add your filters to run at the end of all the flows. To do so you define a global configuration as an element of the AnnotatorFlow. (Note: Because of the nature of the Hypothetical and Negation annotators, more consideration may be needed to determine desired filter usage. See Hypothetical and Negation Annotator Filtering below for more information.) Below is an example of several annotators defined in the flow with a global filter to run at the end of all flow elements.`}</p>\n    <p>{`The `}<em parentName=\"p\">{`globalConfigurations`}</em>{` filter example below filters out any SymptomDiseaseInd annotations where either `}<inlineCode parentName=\"p\">{`negated=true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`hypothetical=true`}</inlineCode>{` - i.e. remove any negated or hypothetical SymptomDiseaseInd annotations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n\"annotatorFlows\": [\n        {\n            \"flow\": {\n                \"elements\": [\n                    {\n                        \"flow\": {\n                            \"elements\": [\n                                {\n                                    \"annotator\": {\n                                        \"name\": \"symptom_disease\"\n                                    }\n                                },\n                                {\n                                    \"annotator\": {\n                                        \"name\": \"negation\"\n                                    }\n                                },\n                                {\n                                    \"annotator\": {\n                                        \"name\": \"hypothetical\"\n                                    }\n                                }\n                            ],\n                            \"async\": true\n                        }\n                    }\n                ],\n                \"async\": false\n            },\n            \"globalConfigurations\": [\n                {\n                    \"filter\": {\n                        \"target\": \"unstructured.data.SymptomDiseaseInd\",\n                        \"serviceFiltered\": false,\n                        \"condition\": {\n                            \"type\": \"notAny\",\n                            \"conditions\": [\n                                {\n                                    \"type\": \"match\",\n                                    \"field\": \"negated\",\n                                    \"values\": [\n                                        \"true\"\n                                    ],\n                                    \"caseInsensitive\": false,\n                                    \"operator\": \"equals\"\n                                },\n                                {\n                                    \"type\": \"match\",\n                                    \"field\": \"hypothetical\",\n                                    \"values\": [\n                                        \"true\"\n                                    ],\n                                    \"caseInsensitive\": false,\n                                    \"operator\": \"equals\"\n                                }\n                            ]\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n  \"unstructured\": [\n    {\n      \"text\": \"Patient does not have lung cancer, but does smoke. She may consider chemotherapy as part of a treatment plan. She also is allergic to dust, but not to pollen. The patient is to have breast cancer screening.\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`The following filter examples illustrate filtering that is defined to be executed after specific annotators complete processing.`}</p>\n    <p>{`Sample request invoking `}<em parentName=\"p\">{`concept_detection`}</em>{` with a filter defined to exclude any annotations detected from `}<em parentName=\"p\">{`concept_detection`}</em>{` where the `}<em parentName=\"p\">{`semanticType`}</em>{` field does not equal `}<em parentName=\"p\"><q>{`neop`}</q></em>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"annotatorFlows\": [\n    {\n      \"flow\": {\n        \"elements\": [\n          {\n            \"annotator\": {\n              \"name\": \"concept_detection\",\n              \"configurations\": [\n                {\n                  \"filter\": {\n                     \"target\": \"unstructured.data.concepts\",\n                     \"condition\": {\n                        \"type\": \"match\",\n                        \"field\": \"semanticType\",\n                        \"values\": [\n                           \"neop\"\n                         ],\n                        \"not\": false,\n                        \"caseInsensitive\": false,\n                        \"operator\": \"equals\"\n                     }\n                  }\n                }\n              ]\n            }\n          }\n        ],\n       \"async\": false\n      }\n    }\n  ],\n  \"unstructured\": [\n    {\n      \"text\": \"Patient has lung cancer, but did not smoke. She may consider chemotherapy as part of a treatment plan.\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`The definition of filtering includes `}<strong parentName=\"p\">{`target`}</strong>{` and `}<strong parentName=\"p\">{`condition`}</strong>{` sections. The `}<strong parentName=\"p\">{`target`}</strong>{` section specifies type of entities to be filtered (defined via object model path to desired entities) e.g. `}<em parentName=\"p\">{`unstructured.data.concepts`}</em>{`. The `}<strong parentName=\"p\">{`condition`}</strong>{` section includes filtering criteria (Match Condition) or filtering criteria set (Grouped Condition) to be applied to target entities. The following snippets illustrates the `}<strong parentName=\"p\">{`target`}</strong>{` section of the filtering definition. The `}<em parentName=\"p\">{`data`}</em>{` section will be added to the `}<em parentName=\"p\">{`unstructured`}</em>{` section after ACD has invoked an annotator for the unstructured text.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"annotatorFlows\": [\n    ...\n    ],\n    \"unstructured\": [\n     \"text\": \"Patient has lung cancer\",\n     \"data\": {\n        \"concepts\": [\n            ...\n        ]\n    }]\n}\n`}</code></pre>\n    <p>{`The `}<strong parentName=\"p\">{`condition`}</strong>{` section of the filtering definition specifies different matching conditions. Field-level filtering criteria is based on a set of possible values listed in the following table. The basic field-level filtering can be either grouped as a grouped condition or nested as a nested condition.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`match (default), all, any, notany`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`field`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`name of field to evaluate`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`values`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`list of possible values`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`operator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`equal (default), contains, containsOneOf, startsWith, fieldExists, greaterThan, greaterThanOrEqualTo, lessThan, lessThanOrEqualTo`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`caseInsensitive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`false(default) or true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`not`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`negate condition (i.e. not equals)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Table 1. Field-level filtering criteria`}</p>\n    <p>{`The following is an example of `}<strong parentName=\"p\">{`Field Equals`}</strong>{` scenario.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"condition\": {\n    \"type\": \"match\",\n    \"field\": \"semanticType\",\n    \"values\": [\n        \"neop\"\n        ],\n    \"not\": false,\n    \"caseInsensitive\": false,\n    \"operator\": \"equals\"\n}\n`}</code></pre>\n    <p>{`The following is an example of `}<strong parentName=\"p\">{`Field Not Equals`}</strong>{` scenario. Notice that `}<em parentName=\"p\">{`not`}</em>{` field has the value of true.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"condition\": {\n    \"type\": \"match\",\n    \"field\": \"semanticType\",\n    \"values\": [\n        \"neop\"\n    ],\n    \"not\": true,\n    \"caseInsensitive\": false,\n    \"operator\": \"equals\"\n}\n`}</code></pre>\n    <p>{`The following is an example of `}<strong parentName=\"p\">{`Field Contains`}</strong>{`. Notice that the `}<em parentName=\"p\">{`field`}</em>{` is set to be `}<em parentName=\"p\">{`section`}</em>{`, and the ‘values’.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"condition\": {\n    \"type\": \"match\",\n    \"field\": \"section\",\n    \"values\": [\n        \"history\"\n    ],\n    \"not\": true,\n    \"caseInsensitive\": false,\n    \"operator\": \"contains\"\n}\n`}</code></pre>\n    <p>{`The following is an example of `}<strong parentName=\"p\">{`Field Exists`}</strong>{`. Notice that the `}<em parentName=\"p\">{`field`}</em>{` is set to be `}<em parentName=\"p\">{`hccCode`}</em>{`, and there are no ‘values’ required.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"condition\": {\n    \"type\": \"match\",\n    \"field\": \"hccCode\",\n    \"not\": true,\n    \"caseInsensitive\": false,\n    \"operator\": \"fieldExists\"\n}\n`}</code></pre>\n    <p>{`fieldExists scenario looks for the existence of the specified field in the annotation and ensures that the field contains a valid value. Valid values are not null or empty values.`}</p>\n    <p>{`The ‘type’ field has the default value of `}<em parentName=\"p\">{`match`}</em>{`. Grouped and nested conditions can be implemented using different values in the ‘type’ field. The following table list set of conditions to be evaluated.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Types`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Conditions`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`match`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`matching condition`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`all`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`all conditions must be met`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`at least one condition must be met`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`not any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`no conditions can be met`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Table 2. Conditions to be evaluated`}</p>\n    <p>{`The following snippet illustrates the grouped condition with the `}<em parentName=\"p\">{`all`}</em>{` type. The returned annotators will satisfy both of the listed conditions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"filter\": {\n    \"target\": \"unstructured.data.concepts\",\n    \"condition\": {\n        \"type\": \"all\",\n        \"conditions\": [{\n            \"type\": \"match\",\n            \"field\": \"semanticType\",\n            \"values\": [\"podg\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        },\n        {\n            \"type\": \"match\",\n            \"field\": \"cui\",\n            \"values\": [\"C0684249\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        }]\n    }\n}\n`}</code></pre>\n    <p>{`The following snippet illustrates the grouped condition with the `}<em parentName=\"p\">{`any`}</em>{` type. The returned annotators will satisfy either of the conditions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"filter\": {\n    \"target\": \"unstructured.data.concepts\",\n    \"condition\": {\n        \"type\": \"any\",\n        \"conditions\": [{\n            \"type\": \"match\",\n            \"field\": \"semanticType\",\n            \"values\": [\"podg\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        },\n        {\n            \"type\": \"match\",\n            \"field\": \"cui\",\n            \"values\": [\"C0684249\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        }]\n    }\n}\n`}</code></pre>\n    <p>{`The following snippet illustrates the grouped condition with the `}<em parentName=\"p\">{`notAny`}</em>{` type. The annotators will only be returned if they don’t match the condition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"filter\": {\n    \"target\": \"unstructured.data.concepts\",\n    \"condition\": {\n        \"type\": \"notAny\",\n        \"conditions\": [{\n            \"type\": \"match\",\n            \"field\": \"semanticType\",\n            \"values\": [\"podg\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        },\n        {\n            \"type\": \"match\",\n            \"field\": \"cui\",\n            \"values\": [\"C0684249\"],\n            \"caseInsensitive\": false,\n            \"operator\": \"equals\"\n        }]\n    }\n}\n`}</code></pre>\n    <p>{`Nested condition refers to the include and exclude annotators with different criteria. Nested condition, similar to to the grouped condition, can be implemented by modifying the value of the `}<em parentName=\"p\">{`type`}</em>{` field. The following example illustrates the situation where one wants to include annotators with the `}<em parentName=\"p\">{`semanticType`}</em>{` of ‘podg’ however, one wants to exclude annotators with the `}<em parentName=\"p\">{`semanticType`}</em>{` of ‘neop’ and annotators with the `}<em parentName=\"p\">{`cui`}</em>{` equals ‘C0684249’.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"filter\": {\n    \"target\": \"unstructured.data.concepts\",\n    \"condition\": {\n        \"type\": \"all\",\n        \"conditions\": [{\n                \"type\": \"match\",\n                \"field\": \"semanticType\",\n                \"values\": [\"podg\"],\n                \"not\": true,\n                \"caseInsensitive\": false,\n                \"operator\": \"equals\"\n            },\n            {\n                \"type\": \"notany\",\n                \"conditions\": [{\n                    \"type\": \"match\",\n                    \"field\": \"semanticType\",\n                    \"values\": [\"neop\"],\n                    \"caseInsensitive\": false,\n                    \"operator\": \"equals\"\n                },\n                {\n                    \"type\": \"match\",\n                    \"field\": \"cui\",\n                    \"values\": [\"C0684249\"],\n                    \"caseInsensitive\": false,\n                    \"operator\": \"equals\"\n                }]\n            }\n        }]\n    }\n}\n`}</code></pre>\n    <h2>{`Hypothetical and Negation Annotator Filtering`}</h2>\n    <p>{`Because the Hypothetical and Negation Annotators can affect annotations created by annotators earlier in a flow, filters constructed for these annotators are typically run immediately after the Hypothetical or Negation annotator. If these filters were run in a global manner, after all of the annotators in the flow have completed, the results returned may include annotations with incorrect feature values for “hypothetical,” “hypotheticalType,” or “negated.”`}</p>\n    <p>{`Consider the scenario where the annotator flow contains both the Procedure annotator followed by the Negation annotator, and the text “She did not have an MRI” is analyzed. A ProcedureInd annotation over “MRI” will get created with the “negated” feature value set to “true.” There will also be a NegatedSpan annotation over “MRI” returned in the results. If a global filter was used to filter away NegatedSpans where the trigger.coveredText equals “not,” the NegatedSpan annotation would no longer show up in the results, however, the ProcedureInd annotation would still have it’s “negated” feature value set to “true.” This can lead to confusing results. If the same filter was used with the Negation annotator, the “negated” feature would remain “false.”`}</p>\n    <p>{`To avoid potential inconsistencies, filters created for Hypothetical or Negation annotators should be declared within the Hypothetical or Negation configurations so they are executed before the effects of these annotators carry over to existing annotations, and not as a global filters.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}